Я нашел и систематизировал правила склонений, которые возможно логически объяснить. Например определить род слова или какое его число точным образом мне не удалось. Но род слов с 3 склонением определить удается в достаточной степени. Этот момент используется в алгоритме.
Также многие слова меняют склонение в зависимости от одушевленности. Например:

Нашел химическое средство Крот_ в магазине.
Нашел кротА на огороде

Я купил торт_.
Я купил собаку и назвал ее Торт_. Получается я купил ТортА.

Есть слова с несклоняемым и разносклоняемым типами склонения, которые я тоже постарался учесть. Слова с мягким знаком в конце могут оказаться мужского рода, это также исключения.

Не удалось в полней мере осуществить многие склонения, которые не определяются конкретным правилам, например некоторые слова на `ок` в конце могут как `ка` в родительном падеже, так и `ока`. В результате мы получаем замок => замока.
Если изменить на замка, также потеряют корректность определения слов, которые должны сохранить `ока`. Исправил в пользу замКА, снежКА и т.д., т.к. встречаются чаще.

Все исключения возможно найти в файле dictionaries.js, там же их можно дополнять.

Функции вынесены в functions, обработак инпутов в form_handlers

На реальном проекте я бы использовал стороенние библиотеки для решения подобных задач, но т.к. проект учебный и служит для того, чтобы познакомить Вас с нашими навыками, я постарался написть все вручную. 

Некоторые слова будут обработаны некорректно! С другой стороны Вы можете склонять ПРИДУМАННЫЕ слова при помощи этого алгоритма.

Основне функции:
declensionForm - определяет тип склонения
splitWord - делит слово на концовку (не окончание) из гласных, `й`, `ь` и начальную часть
genus - пытается определить род слова. Используется для первого\третьего склонения. Исключния мужского рода с символом `ь` на конце это исключения, берутся из словаря в файле dictionaries. 
Если такое слово склоняется некорректно, его возможно добавить в словарь. К сожалению, определить род автоматически мне не удалоь.
changeСaseToxxx - пытается сменить падеж на xxx. Основная функция, в ней лежат правила обработки окончаний.

Проект собирает gulp. Папка app является исходной, папка dist готовым проектом. 
Для запуска сборщика необходим node.js

> npm i
> gulp

Конвертация шрифтов из ttf в woff и woff2

> gulp fonts

Проект маленький, не использует базы данных, php, реакт и др обвеса, следовательно его можно запустить на любом вебсервере без дополнительных настроек, путем копирования содержимого папки dist в рабочую директорию.
Возможно, придется написать новый vhost для этой папки, зависит от Вашего сервера.

Зазмещаю на тестовом домене http://azaza.online